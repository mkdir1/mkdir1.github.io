<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Vintion's blog]]></title>
  <link href="http://mkdir1.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://mkdir1.github.io/"/>
  <updated>2014-07-30T08:48:22+08:00</updated>
  <id>http://mkdir1.github.io/</id>
  <author>
    <name><![CDATA[Vintion]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[添加用户]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/17/tian-jia-yong-hu/"/>
    <updated>2014-07-17T01:28:54+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/17/tian-jia-yong-hu</id>
    <content type="html"><![CDATA[<h4>Linux下添加用户　</h4>

<p>所涉及到的知识和概念比较多</p>

<!--more-->


<h5>命令</h5>

<p><strong>useradd</strong></p>

<pre><code>useradd [] name
-b, --base-dir BASE_DIR 新账户的主目录的基目录
-c, --comment COMMENT         新账户的 GECOS 字段
-d, --home-dir HOME_DIR       新账户的主目录
-D, --defaults      显示或更改默认的 useradd 配置
-e, --expiredate EXPIRE_DATE  新账户的过期日期
-f, --inactive INACTIVE       新账户的密码不活动期
-g, --gid GROUP     新账户主组的名称或 ID
-G, --groups GROUPS 新账户的附加组列表
-h, --help                    显示此帮助信息并推出
-k, --skel SKEL_DIR 使用此目录作为骨架目录
-K, --key KEY=VALUE           不使用 /etc/login.defs 中的默认值
-l, --no-log-init   不要将此用户添加到最近登录和登录失败数据库
-m, --create-home   创建用户的主目录
-M, --no-create-home        不创建用户的主目录
-N, --no-user-group 不创建同名的组
-o, --non-unique        允许使用重复的 UID 创建用户
-p, --password PASSWORD     加密后的新账户密码
-r, --system                  创建一个系统账户
-R, --root CHROOT_DIR         chroot 到的目录
-s, --shell SHELL       新账户的登录 shell
-u, --uid UID           新账户的用户 ID
-U, --user-group        创建与用户同名的组
-Z, --selinux-user SEUSER       为 SELinux 用户映射使用指定 SEU
sudo useradd -d /home/hadoop/ -g adm -s /bin/bash hadoop
</code></pre>

<ul>
<li><ol>
<li>如果<code>-s /bin/sh</code>就会出现登录后只有一个$的情形，这是所选的shell出不对，应该换成/bin/bash</li>
</ol>
</li>
<li><ol>
<li>所选的目录应该事先就创建一个 <code>-d</code></li>
</ol>
</li>
<li><ol>
<li>-g 组名，可以查看<code>/etc/group</code>文件中的组名</li>
</ol>
</li>
</ul>


<p><strong>userdel</strong></p>

<pre><code>sudo userdel hadoop
</code></pre>

<p><strong>who,whoami,w,finger</strong>
这此命令查看相关用户情况，是个很常用的命令，用法也很简单</p>

<h5>概念</h5>

<p><strong>组的分类</strong>
&ndash; 1. 管理员 root:具有使用系统所有权限的用户,其UID 为0.
&ndash; 2. 普通用户: 即一般用户,其使用系统的权限受限,其UID为500-60000之间.
&ndash; 3. 系统用户 :保障系统运行的用户,一般不提供密码登录系统,其UID为1-499之间.</p>

<p><strong>文件</strong>
&ndash; 1．/etc/passwd文件：
```
其格式：account：password：UID:GID:GECOS:diretory:shell</p>

<pre><code>    account: 用户名或帐号
    password ：用户密码占位符
    UID：用户的ID号
    GID：用户所在组的ID号
    GECOS:用户的详细信息（如姓名，年龄，电话等）
    diretory：用户所的家目录
    shell：用户所在的编程环境
</code></pre>

<p><code>             
- 2. /etc/shadow
</code>
   其格式：account：password：最近更改密码的日期：密码不可更该的天数：密码需要重新更改的天数：密码更改前的警告期限：密码过期的宽限时间：帐号失效日期：保留
```
<strong>相关命令</strong>
usermod, groupdd</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ssh无密码登录]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/15/sshwu-mi-ma-deng-lu/"/>
    <updated>2014-07-15T00:30:04+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/15/sshwu-mi-ma-deng-lu</id>
    <content type="html"><![CDATA[<h4>ssh无密码登录</h4>

<!--more-->


<p>ssh应用太广，最常用的就是远程登录和文件传输了，每次输入密码和登录确实很浪费时间，这里就不需要输入密码了</p>

<h5>设置</h5>

<ul>
<li><ol>
<li>在客户端．生成密钥<code>ssh-keygen -t rsa</code>，这样在~/.ssh文件夹中就会有一个公钥和一个私钥</li>
</ol>
</li>
<li><ol>
<li>服务端，在~/.ssh中，将客户端的id_rsa.phb放到这里，<code>scp .ssh/id_rsa.phb ip:.ssh/authorizend_keys</code>，也可以命名其它的</li>
</ol>
</li>
<li><ol>
<li>再登录时就可以不用输入密码．也可以把登录alias写入bash中，scp时也不用输入密码，但是还是要记住ip</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux启动流程]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/09/linuxqi-dong-liu-cheng/"/>
    <updated>2014-07-09T23:14:18+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/09/linuxqi-dong-liu-cheng</id>
    <content type="html"><![CDATA[<h4>Linux的启动顺序</h4>

<ul>
<li><p>1 加载BIOS的硬件信息并进行自检，然后根据设置取得第一个可启动的设备；</p></li>
<li><p>2 读取并执行第一个启动设备内MBR(master boot record,主引导分区)的boot loader；</p></li>
<li><p>3 依据bootloader的设置加载kernel，kernel开始检测硬件和加载驱动程序；</p></li>
</ul>


<!--more-->


<ul>
<li><p>4 在硬件驱动成功后，kernel会调用init进程，init进程会取得run-level信息；</p></li>
<li><p>5 init执行/etc/rc.d/sysinit文件来准备软件执行的操作环境；</p></li>
<li><p>6 init执行run-level的各个服务；</p></li>
<li><p>7 init执行/etc/rc.d/rc.local文件；</p></li>
<li><p>8 init执行终端机模拟程序mingetty来启动login进程，最后等待用户登录。</p></li>
</ul>


<hr />

<h4>用户登录后</h4>

<ul>
<li><p>1 /etc/profile：此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行. 并从/etc/profile.d目录的配置文件中搜集shell的设置。</p></li>
<li><p>2 /etc/bashrc: 为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取。</p></li>
<li><p>3 ~/.bash_profile: 每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。</p></li>
<li><p>4 ~/.bashrc: 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。</p></li>
<li><p>5 ~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件.  另外,/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承 /etc/profile中的变量,他们是"父子"关系。</p></li>
<li><p>6 ~/.bash_profile 是交互式、login 方式进入 bash 运行的~/.bashrc 是交互式 non-login 方式进入 bash 运行的通常二者设置大致相同，所以通常前者会调用后者。</p></li>
</ul>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下常用的软件汇集]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/09/linuxxia-chang-yong-de-ruan-jian-hui-ji/"/>
    <updated>2014-07-09T20:29:04+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/09/linuxxia-chang-yong-de-ruan-jian-hui-ji</id>
    <content type="html"><![CDATA[<h3>Linux下常用的软件合集</h3>

<p>自己所用的环境一直是Linux,版本是最新的Ubuntu14.04.</p>

<p>其它版本的linux未尝试，实属遗憾，先把自己所用的环境整理一番</p>

<!--more-->


<hr />

<h4>工作必备</h4>

<ul>
<li>Chrome/Firefox.(Vimium)</li>
<li>Thunderbird</li>
<li>为知笔记(Evernote也很不错，不过在linux下只有这个支持得不错，且用户量也大)</li>
<li>搜狗五笔(支持linux真心不错，业界良心，其它的什么一直使用不便)</li>
<li>Samba</li>
<li>QQ，（这个需要自己想办法，不过至今有一个完全支持的版本，总是bug不断)</li>
<li>Ffmpeg&amp;VLC</li>
<li>rdesktop</li>
<li>syspeek</li>
<li>deeping-Music-play</li>
<li>wps&amp;liboffice(有些要自己安装)</li>
<li>星际译王</li>
<li>unoconv和pandoc</li>
<li>synergy</li>
<li>skype</li>
<li>variety(这个软件使得Linux有了windows上aero的效果)</li>
<li>Dropbox</li>
<li>OpenFetion</li>
<li>Filezilla
&ndash;. Freemind</li>
<li>Wine</li>
<li>豆瓣fm</li>
<li>Tweak</li>
<li>Gimp</li>
<li>SMplayer</li>
<li>Adobe Flash</li>
<li>福昕PDF</li>
<li>Cairo-Dock(这个搞得像Mac)</li>
<li>抓虾(git上的zx)</li>
</ul>


<hr />

<h4>程序员必备</h4>

<p>这个应该没什么是必备的，程序员的世界无法看遍．下面是老夫用的，bin下面一大堆，只列几个正在用的</p>

<ul>
<li>Vim(推荐k-vim)</li>
<li>QT</li>
<li>retext</li>
<li>eclipse</li>
<li>mysql</li>
<li>python</li>
<li>git&amp;svn</li>
<li>ssh</li>
<li>Wireshark</li>
<li>codeblocks</li>
<li>Texmaker</li>
<li>VirtualBox</li>
<li>JAVA</li>
<li>g++</li>
</ul>


<hr />

<h5>原则</h5>

<ul>
<li>不折腾不舒服，不尝试无发言权</li>
<li>数学和音乐让我又度过了无聊的一天</li>
<li>一天不学，落后</li>
<li>记在纸上的，永远记不住</li>
<li>用不上的，最好不要学，除非是装13</li>
<li>永远不要看电视剧，看下情节概要就行</li>
<li>人生如戏，就看演技　</li>
</ul>

]]></content>
  </entry>
  
</feed>
