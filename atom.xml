<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vintion's blog]]></title>
  <link href="http://mkdir1.github.io/atom.xml" rel="self"/>
  <link href="http://mkdir1.github.io/"/>
  <updated>2014-07-22T20:01:11+08:00</updated>
  <id>http://mkdir1.github.io/</id>
  <author>
    <name><![CDATA[Vintion]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Valid-sudoku]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/22/valid-sudoku/"/>
    <updated>2014-07-22T19:56:41+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/22/valid-sudoku</id>
    <content type="html"><![CDATA[<h4>Valid Sudoku</h4>

<p>The Sudoku board could be partially filled, where empty cells are filled with the character &lsquo;.&rsquo;.</p>

<p>A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.</p>

<p>我这解法，绝对是对算法的侮辱～　哈哈</p>

<!--more-->


<p>Code:</p>

<pre><code>class Solution {
public:
    bool isValidSudoku(vector&lt;vector&lt;char&gt; &gt; &amp;board) 
    {
        for(int i=0;i&lt;9;i++)
        for(int j=0;j&lt;9;j++)
        {
            if(board[i][j]=='.')
                continue;
            for(int k=j+1;k&lt;9;k++)
                if(board[i][j]==board[i][k])return false;
            for(int k=i+1;k&lt;9;k++)
                if(board[i][j]==board[k][j])return false;
            if(i%3==0&amp;&amp;j%3==0)
            {
                if(board[i+1][j+1]!='.'&amp;&amp;board[i+1][j+1]==board[i][j])return false;
                if(board[i+2][j+1]!='.'&amp;&amp;board[i+2][j+1]==board[i][j])return false;
                if(board[i+1][j+2]!='.'&amp;&amp;board[i+1][j+2]==board[i][j])return false;
                if(board[i+2][j+2]!='.'&amp;&amp;board[i+2][j+2]==board[i][j])return false;
            }
            if(i%3==0&amp;&amp;(j-1)%3==0)
            {
                if(board[i+1][j-1]!='.'&amp;&amp;board[i+1][j-1]==board[i][j])return false;
                if(board[i+2][j-1]!='.'&amp;&amp;board[i+2][j-1]==board[i][j])return false;
                if(board[i+1][j+1]!='.'&amp;&amp;board[i+1][j+1]==board[i][j])return false;
                if(board[i+2][j+1]!='.'&amp;&amp;board[i+2][j+1]==board[i][j])return false;   
            }
            if(i%3==0&amp;&amp;(j+1)%3==0)
            {
                if(board[i+1][j-1]!='.'&amp;&amp;board[i+1][j-1]==board[i][j])return false;
                if(board[i+2][j-1]!='.'&amp;&amp;board[i+2][j-1]==board[i][j])return false;
                if(board[i+1][j-2]!='.'&amp;&amp;board[i+1][j-2]==board[i][j])return false;
                if(board[i+2][j-2]!='.'&amp;&amp;board[i+2][j-2]==board[i][j])return false;   
            }
            if((i-1)%3==0&amp;&amp;j%3==0)
            {
                if(board[i+1][j+1]!='.'&amp;&amp;board[i+1][j+1]==board[i][j])return false;
                if(board[i+1][j+2]!='.'&amp;&amp;board[i+1][j+2]==board[i][j])return false;
            }
            if((i-1)%3==0&amp;&amp;(j-1)%3==0)
            {
                if(board[i+1][j-1]!='.'&amp;&amp;board[i+1][j-1]==board[i][j])return false;
                if(board[i+1][j+1]!='.'&amp;&amp;board[i+1][j+1]==board[i][j])return false;
            }
             if((i-1)%3==0&amp;&amp;(j+1)%3==0)
            {
                if(board[i+1][j-1]!='.'&amp;&amp;board[i+1][j-1]==board[i][j])return false;
                if(board[i+1][j-2]!='.'&amp;&amp;board[i+1][j-2]==board[i][j])return false;
            }

        }
        return true;
    }
};
</code></pre>

<p>好吧，管用就行，一遍过需要多仔细认真啊</p>

<p>这样代码还是很好看的，就是有点长</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode-combination Sum]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/22/leetcode-combination-sum/"/>
    <updated>2014-07-22T17:05:12+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/22/leetcode-combination-sum</id>
    <content type="html"><![CDATA[<h4>Combination Sum</h4>

<p>Given a set of candidate numbers &copy; and a target number (T), find all unique combinations in C where the candidate numbers sums to T.</p>

<p>The same repeated number may be chosen from C unlimited number of times.</p>

<p>Note:</p>

<p>All numbers (including target) will be positive integers.
Elements in a combination (a1, a2, … , ak) must be in non-descending order. (ie, a1 ≤ a2 ≤ … ≤ ak).</p>

<p>The solution set must not contain duplicate combinations.
For example, given candidate set 2,3,6,7 and target 7,
A solution set is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[2,3,6,7] 7
</span><span class='line'>[7] 
</span><span class='line'>[2, 2, 3] 
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>这题真是基础，之前一直对此类不知所措，现在略通一二，甚喜</p>

<p>Code:</p>

<pre><code>class Solution {
public:
    void Getcom(vector&lt;int&gt;&amp;can, int target, vector&lt;vector&lt;int&gt;&gt;&amp;result, int level, int &amp;sumcurrent, int nsize, vector&lt;int&gt;&amp;tmp)
    {
        if(sumcurrent&gt;target)return;
        if(target==sumcurrent)
        {
            result.push_back(tmp);
            return;
        }
        for(int i=level;i&lt;nsize;i++)
        {

                sumcurrent += can[i];
                tmp.push_back(can[i]);
                Getcom(can,target,result,i,sumcurrent,nsize,tmp);
                tmp.pop_back();
                sumcurrent -=can[i];
        }

    }
    vector&lt;vector&lt;int&gt; &gt; combinationSum(vector&lt;int&gt; &amp;candidates, int target) 
    {
       vector&lt;vector&lt;int&gt;&gt; result;
       vector&lt;int&gt;tmp;
       int size = candidates.size();
       sort(candidates.begin(),candidates.end());
       int sumc = 0;
       Getcom(candidates,target,result,0,sumc,size,tmp);
       return result;
    }
};
</code></pre>

<p>DFS方便记录结果，DP方便记数</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP入门]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/20/phpru-men/"/>
    <updated>2014-07-20T13:18:28+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/20/phpru-men</id>
    <content type="html"><![CDATA[<h4>PHP入门</h4>

<p>前端的几门语言，HTML/CSS/JavaScript/XML等，这些语言有很大的关联性，很多都是相通相互使用的．入门后，至少可以阅读源码，这样对理解和布局帮助很大．</p>

<p>至于高级技巧和应用，如果从事前端的开发，那就要精通了，这里只对本人初学入门所用，仅对基本语法和代码阅读无碍即可．</p>

<!--more-->


<h5>介绍与特点</h5>

<ul>
<li>1.PHP脚本是在服务器上执行</li>
<li>2.PHP Hypertext Preprocessor</li>
<li>3.开源脚本语言，可免费下载，相对于微软的ASP，其是收费的，</li>
<li>4.PHP文件能包含文本，HTML, CSS以及PHP代码</li>
<li>5.PHP在服务器上运行，结果以纯文本返回浏览器</li>
<li><ol>
<li>PHP文件后缀.php</li>
</ol>
</li>
</ul>


<h5>PHP能够做什么　</h5>

<ul>
<li>1.PHP 能够生成动态页面内容</li>
<li>2.PHP 能够创建、打开、读取、写入、删除以及关闭服务器上的文件</li>
<li>3.PHP 能够接收表单数据</li>
<li>4.PHP 能够发送并取回 cookies</li>
<li>5.PHP 能够添加、删除、修改数据库中的数据</li>
<li>6.PHP 能够限制用户访问网站中的某些页面</li>
<li>7.PHP 能够对数据进行加密</li>
<li>8.通过 PHP，您可以不受限于只输出 HTML。您还能够输出图像、PDF 文件、甚至 Flash 影片。您也可以输出任何文本，比如 XHTML 和 XML</li>
<li>9.LAMP中的P就是PHP</li>
</ul>


<h5>安装PHP</h5>

<ul>
<li><ol>
<li>安装Web服务器，LAMP中的Apatch</li>
</ol>
</li>
<li><ol>
<li>安装数据库，Mysql</li>
</ol>
</li>
<li><ol>
<li>安装PHP</li>
</ol>
</li>
</ul>


<p>如需在 Windows 平台设置并立即运行 PHP，您还可以安装<strong>WebMatrix</strong>.</p>

<p>WebMatrix is a free, lightweight, cloud-connected web development tool</p>

<h5>基本语法</h5>

<ul>
<li>1.PHP脚本以<code>&lt;?php　//代码　．．　?&gt;</code>包含起来</li>
<li>2.PHP文件通常包含HTML标签和PHP脚本代码</li>
<li>3.PHP代码中语句以;结尾</li>
<li>4,注释// # /**/</li>
<li>5.大小写敏感</li>
<li>6.有点像Shell脚本</li>
</ul>


<p>变量规则：
&ndash;  变量以 $ 符号开头，其后是变量的名称
&ndash;  变量名称必须以字母或下划线开头
&ndash;  变量名称不能以数字开头
&ndash;  变量名称只能包含字母数字字符和下划线（A-z、0-9 以及 _）
&ndash;  变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）</p>

<p>三种不同作用域变量：
&ndash; local（局部）
&ndash; global（全局）
&ndash; static（静态）</p>

<p>通常，当函数完成/执行后，会删除所有变量。不过，有时我需要不删除某个局部变量。实现这一点需要更进一步的工作。
要完成这一点，请在您首次声明变量时使用 static</p>

<p>echo 和 print 之间的差异：
&ndash; echo &ndash; 能够输出一个以上的字符串
&ndash; print &ndash; 只能输出一个字符串，并始终返回 1
&ndash; 两者均可包含括号</p>

<p><strong>数据类型:</strong>字符串、整数、浮点数、逻辑、数组、对象、NULL</p>

<p><strong>整数规则：</strong>
&ndash; 整数必须有至少一个数字（0-9）
&ndash; 整数不能包含逗号或空格
&ndash; 整数不能有小数点
&ndash; 整数正负均可
&ndash; 可以用三种格式规定整数：十进制、十六进制（前缀是 0x）或八进制（前缀是 0）</p>

<p>浮点数是有小数点或指数形式的数字</p>

<p>逻辑是 true 或 false</p>

<p>对象是存储数据和有关如何处理数据的信息的数据类型。
在 PHP 中，必须明确地声明对象。
首先我们必须声明对象的类。对此，我们使用 class 关键词。类是包含属性和方法的结构。
然后我们在对象类中定义数据类型，然后在该类的实例中使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>class Car
</span><span class='line'>{
</span><span class='line'>  var $color;
</span><span class='line'>  function Car($color="green") {
</span><span class='line'>    $this-&gt;color = $color;
</span><span class='line'>  }
</span><span class='line'>  function what_color() {
</span><span class='line'>    return $this-&gt;color;
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>?&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>字符串函数</strong>
&ndash; strle()
&ndash; strpos();查找匹配字符，strpos(&ldquo;Hello&rdquo;,&ldquo;ll&rdquo;);结果为2;找不到返回FALSE</p>

<p><a href="http://www.w3school.com.cn/php/php_ref_string.asp">参考字符串函数</a></p>

<p>define()函数定义常量</p>

<p><strong>运算符</strong>
. 串接，如$str1=&ldquo;hello&rdquo;;$str2=$str1.&ldquo;world&rdquo;;则str=&ldquo;helloworld&rdquo;;
.= 串接赋值</p>

<p>还有条件语句，循环，数组等，这一些操作和其它语句有很大的相似，可直接读代码时得到什么意思，但于自己写的话，可能需要常期训练．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xml学习]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/20/xmlxue-xi/"/>
    <updated>2014-07-20T04:13:30+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/20/xmlxue-xi</id>
    <content type="html"><![CDATA[<h4>XML入门</h4>

<p>XML用来传输和存储数据</p>

<p>HTML用来显示数据</p>

<p>Extensible Markup Language可扩展标记语言，类似HTML也是标记语言</p>

<!--more-->


<h5>特点</h5>

<ul>
<li>1.XML标签没有预定义，HTML标签定义了</li>
<li>2.XML被设计用来结构化，存储以及传输信息</li>
<li>3.Json也是和XML功能相同，但用的范围不同</li>
<li>4.XML是纯文本，没有什么特别之处，可以处理文本的软件都可来处理XML</li>
<li>5.XML 是独立于软件和硬件的信息传输工具</li>
<li>6.XML把数据从HTML中分离</li>
<li>7.XML 简化数据共享</li>
<li>8.XML 简化数据传输</li>
<li>9.XHTML &ndash; 最新的 HTML 版本</li>
<li>10.WSDL &ndash; 用于描述可用的 web service</li>
<li>11.WAP 和 WML &ndash; 用于手持设备的标记语言</li>
<li>12.RSS &ndash; 用于 RSS feed 的语言</li>
<li>13.RDF 和 OWL &ndash; 用于描述资源和本体</li>
<li>14.SMIL &ndash; 用于描述针针对 web 的多媒体</li>
</ul>


<h5>语法</h5>

<p>第一行一般为说明文字
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;ISO-8859-1&rdquo;?></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
</span><span class='line'>&lt;note&gt;
</span><span class='line'>&lt;to&gt;George&lt;/to&gt;
</span><span class='line'>&lt;from&gt;John&lt;/from&gt;
</span><span class='line'>&lt;heading&gt;Reminder&lt;/heading&gt;
</span><span class='line'>&lt;body&gt;Don't forget the meeting!&lt;/body&gt;
</span><span class='line'>&lt;/note&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第一行，说明文字</li>
<li>第二行，根部，note是自定义文字，note说明是个书签</li>
<li>第三行，to的内容是George，对应的其它行意义一样</li>
</ul>


<h5>树形结构</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;root&gt;
</span><span class='line'>    &lt;child&gt;
</span><span class='line'>        &lt;subchild&gt;...&lt;/subchild&gt;
</span><span class='line'>    &lt;/child
</span><span class='line'>    &lt;otherchild&gt;...&lt;/otherchild&gt;
</span><span class='line'>&lt;/root&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>1.还可以像HTML那样添加属性</p></li>
<li><p>2.元素必须有关闭标签</p></li>
<li><p>3.对大小写敏感</p></li>
<li><p>4.必须正确嵌套</p></li>
</ul>


<p>这是最基础的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android-控件]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/19/android-kong-jian/"/>
    <updated>2014-07-19T21:00:37+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/19/android-kong-jian</id>
    <content type="html"><![CDATA[<h4>Android常用控件</h4>

<p>仅列常用的控件，并实践之．毕竟初学者，学会用，有印象即可，其它的可举一反三，融会贯通．</p>

<!--more-->


<h5>TextView</h5>

<h5>EditText</h5>

<h5>ImageView</h5>

<h5>Button</h5>

<h4>#</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Longest Palindromic Substring]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/longest-palindromic-substring/"/>
    <updated>2014-07-18T21:22:53+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/longest-palindromic-substring</id>
    <content type="html"><![CDATA[<h5><a href="https://oj.leetcode.com/problems/longest-palindromic-substring/">Longest Palindromic Substring</a></h5>

<h5>Probles</h5>

<p>Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.</p>

<p>看本站内的总结：<a href="http://mkdir1.github.io/blog/2014/07/13/zui-xi-lie/">最长回文字符串</a></p>

<!--more-->


<h5>Code</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Solution {
</span><span class='line'>public:
</span><span class='line'>    string longestPalindrome(string s)
</span><span class='line'>    {
</span><span class='line'>        int len = s.length();
</span><span class='line'>        string str="";
</span><span class='line'>        if(len==0)return str;
</span><span class='line'>        int maxlen = 0;
</span><span class='line'>        int leng;
</span><span class='line'>        int left,right;
</span><span class='line'>        for(int i=0;i&lt;2*len-1;i++)
</span><span class='line'>        {
</span><span class='line'>            if(i%2==0)
</span><span class='line'>            {
</span><span class='line'>                leng = 1;
</span><span class='line'>                left = i/2 - 1;
</span><span class='line'>                right = i/2 + 1;
</span><span class='line'>                while(left&gt;=0&&right&lt;len&&s.at(left)==s.at(right))
</span><span class='line'>                {
</span><span class='line'>                    leng += 2;
</span><span class='line'>                    left--;
</span><span class='line'>                    right++;
</span><span class='line'>                }
</span><span class='line'>                 if(leng&gt;maxlen)
</span><span class='line'>              {
</span><span class='line'>                    maxlen = leng;
</span><span class='line'>                    str = s.substr(i/2-maxlen/2, maxlen);
</span><span class='line'>              }
</span><span class='line'>            }
</span><span class='line'>            else
</span><span class='line'>            {
</span><span class='line'>                leng = 0;
</span><span class='line'>                left = i/2;
</span><span class='line'>                right = i/2+1;
</span><span class='line'>                 while(left&gt;=0&&right&lt;len&&s[left]==s[right])
</span><span class='line'>                {
</span><span class='line'>                    leng += 2;
</span><span class='line'>                    left--;
</span><span class='line'>                    right++;
</span><span class='line'>                }
</span><span class='line'>               
</span><span class='line'>            
</span><span class='line'>             if(leng&gt;maxlen)
</span><span class='line'>              {
</span><span class='line'>                    maxlen = leng;
</span><span class='line'>                    str = s.substr(i/2-maxlen/2+1, maxlen);
</span><span class='line'>              }
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>        return str;
</span><span class='line'>    }
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<h5>注意</h5>

<ul>
<li><ol>
<li>把奇偶统一起来，这样i的大小是2len-1的大小</li>
</ol>
</li>
<li><ol>
<li>还有一个注意点是，substr()这个两个参数是指起始和长度，起始从0开始就算第一个</li>
</ol>
</li>
<li><ol>
<li>后面两个if判断不能统一起来，因为substr中的参数不一样</li>
</ol>
</li>
<li><ol>
<li>方法：<strong>从中间向两边比较来判断是否回文，例a_b_c_b_a，则这个字符串abcba长度5，判断的位置有9个，然后从中间向两边展开，首先判断是否出界，再看是不是相等，这样最后更新长度和字符串</strong></li>
</ol>
</li>
<li>5.　本文属于<a href="http://mkdir1.github.io/blog/2014/07/13/zui-xi-lie/">最系列</a>的应用</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spiral Matrix]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/spiral-matrix/"/>
    <updated>2014-07-18T19:01:52+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/spiral-matrix</id>
    <content type="html"><![CDATA[<h4><a href="https://oj.leetcode.com/problems/spiral-matrix/">Spiral Matrix</a></h4>

<h5>Problem</h5>

<p>Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.</p>

<p>For example,</p>

<p>Given the following matrix:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[1,2,3]
</span><span class='line'>[4,5,6]
</span><span class='line'>[7,8,9]</span></code></pre></td></tr></table></div></figure>


<p>You should return<code>[1,2,3,6,8,9,7,4,5]</code></p>

<!--more-->


<h5>Code</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Solution {
</span><span class='line'>public:
</span><span class='line'>    vector&lt;int&gt; spiralOrder(vector&lt;vector&lt;int&gt; &gt; &matrix)
</span><span class='line'>    {
</span><span class='line'>        vector&lt;int&gt;result;
</span><span class='line'>        result.clear();
</span><span class='line'>        int row = matrix.size();
</span><span class='line'>        if(row==0)return result;
</span><span class='line'>        int col = matrix[0].size();
</span><span class='line'>        int rowleft = 0, rowright = col -1;
</span><span class='line'>        int coltop = 0, colbott = row -1;
</span><span class='line'>        int i=0,j=0;
</span><span class='line'>        int dir = 1;
</span><span class='line'>        while(rowleft&lt;=rowright&&coltop&lt;=colbott)
</span><span class='line'>        {
</span><span class='line'>            switch(dir)
</span><span class='line'>            {
</span><span class='line'>                case 1:   //toright
</span><span class='line'>                    while(rowleft&lt;=rowright&&j&gt;=rowleft&&j&lt;=rowright)
</span><span class='line'>                    {
</span><span class='line'>                        result.push_back(matrix[i][j]);
</span><span class='line'>                        j++;
</span><span class='line'>                    }
</span><span class='line'>                    j--;
</span><span class='line'>                    i++;
</span><span class='line'>                    coltop++;
</span><span class='line'>                    dir = 2;
</span><span class='line'>                    break;
</span><span class='line'>                case 2: //tobott
</span><span class='line'>                   while(coltop&lt;=colbott&&i&gt;=coltop&&i&lt;=colbott)
</span><span class='line'>                   {
</span><span class='line'>                       result.push_back(matrix[i][j]);
</span><span class='line'>                       i++;
</span><span class='line'>                   }
</span><span class='line'>                   i--;
</span><span class='line'>                   j--;
</span><span class='line'>                   rowright--;
</span><span class='line'>                   dir = 3;
</span><span class='line'>                   break;
</span><span class='line'>                case 3: //toleft
</span><span class='line'>                 while(rowleft&lt;=rowright&&j&gt;=rowleft&&j&lt;=rowright)
</span><span class='line'>                 {
</span><span class='line'>                     result.push_back(matrix[i][j]);
</span><span class='line'>                     j--;
</span><span class='line'>                 }
</span><span class='line'>                 j++;
</span><span class='line'>                 i--;
</span><span class='line'>                 colbott--;
</span><span class='line'>                 dir = 4;
</span><span class='line'>                 break;
</span><span class='line'>                case 4:  //totop
</span><span class='line'>                 while(coltop&lt;=colbott&&i&gt;=coltop&&i&lt;=colbott)
</span><span class='line'>                 {
</span><span class='line'>                      result.push_back(matrix[i][j]);
</span><span class='line'>                      i--;
</span><span class='line'>                 }
</span><span class='line'>                 i++;
</span><span class='line'>                 j++;
</span><span class='line'>                 rowleft++;
</span><span class='line'>                 dir = 1;
</span><span class='line'>                 break;
</span><span class='line'>                 default:
</span><span class='line'>                    break;
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>      
</span><span class='line'>        return result;
</span><span class='line'>    }
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>有很多种方法，这是自己的一种实</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[李天一列传]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/li-tian-%5B%3F%5D-lie-chuan/"/>
    <updated>2014-07-18T16:57:08+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/li-tian-[?]-lie-chuan</id>
    <content type="html"><![CDATA[<h4><strong>屎记　李天一列传</strong></h4>

<p><strong>文兄</strong></p>

<!--more-->


<hr />

<p>李天一，字冠丰，长安海淀人也。父两江，伶官也，以狎歌得宠，捧之歌王，颇得上赞许，封誉无数。天一好游侠，喜交接，眉清目秀，雄姿英发。尝与父同演，时人渐知其名。母梦鸟，荧屏之上尽吐相夫教子之法。根正苗红，其所谓也。未冠既海内闻名，当世人奇之。</p>

<p>天一孩提之时，便懂鼓琴，童龀之年，即会书法，幼学之际，渐通冰球。凡此种种，不一而足，可谓全才。其父甚喜，遂请名家教之。尝偕其交接权贵，以为后靠，现身荧屏，以养盛名。又系钟鸣鼎食之家，富家权贵之族，必国之大器也。天下第一，恰如其名，亦其父之所盼也。天一系老来子，捧之心肝，又类己，两江宠之尤甚。故宝马香车，无所不予，锦衣雕裘，毫不吝惜。少时米国游学，未冠既海归故里。</p>

<p>天一好宝马，喜美色，甚类其父。尝驱马游街，风驰电掣之状，迅雷不及万一也。行人如遇鬼神，唯恐避之不及。天一见状，快然自乐。先时，天一与其友各得一名驹，相与赛驰。天一为别驾所阻，稍逊其友。见所阻者形容甚猥，乃恶语加之。然此人不知其大名，竟起而理论。当时，众友于侧，天一颜面尽失，怒发冲冠，挥拳相向。天一身长八尺，力能扛鼎，无与争锋。狂殴几死乃止。或唤巡捕房。天一愈怒曰：“敢生事者死！竖子焉知吾父其谁？” 乃扬长而去。有司惮其父威，息事宁人。其父多以钱财了结此事。天一遂骄恣日长，乃恣意纵情，豪掷千金，游逞市井，结交朋党，不务正业。</p>

<p>及长，略懂云雨之事。尝闻天一侮其师，其师乃有夫之妇，畏两江夫妇淫威，不敢发。遂得诨名：海淀银枪小霸王。一晚，偕友数人章台游冶。酒酣耳热之际，灯火阑珊之处，见一女子，仪容艳丽，眉目清明。误以为陪酒，欲谋不轨。趁其醉，遂行苟且。天一素豪气，事毕亦念其党，可怜此女，数遭其辱。天一视若无事，恨未携相机，记此盛事。然此烈女，诉至大理寺，非钱财所能屈也。一时，世人哗然，海内震动，外邦亦引为笑谈。有司畏滔滔民意，汹汹舆情，不敢不察。两江素善钻研、勤于奔走，又门生故吏遍布朝野，多有名伶教授为之辩解，更添权贵为之开脱，指鹿为马、颠倒黑白更不在话下。或曰：此女系风尘，实索财未果反诬天一。又太学教授易延友曰：陪酒之女，人微命贱，侮之，其害甚小。梦鸟亦哭亦诉，其状生不如死，有司怜之。然不知梦鸟本两江之徒，素善演技。时平哥元年，始推新政，严惩腐败。国人久遭苛政，素淫官威。深恶权贵鱼肉。当时，群情激动，请愿之声不绝。纵两江四处走动，亦不免身败名裂，其子囹圄。</p>

<p>文兄曰：昔陈涉诚不知王侯将相，确有其种。富贵之家，官宦子弟，本无饥寒之忧，无从业之虑。固其立业之机，倍于庶民，其功成之道，数于常人。 然其不争，流恶乡里，何也？ 古今纨绔之所同也！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rotate Image]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/rotate-image/"/>
    <updated>2014-07-18T16:44:12+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/rotate-image</id>
    <content type="html"><![CDATA[<h4><a href="https://oj.leetcode.com/problems/rotate-image/">Rotate Image</a></h4>

<h5>Problem:</h5>

<p>You are given an n x n 2D matrix representing an image.</p>

<p>Rotate the image by 90 degrees (clockwise).</p>

<p>Follow up:
Could you do this in-place?</p>

<!--more-->


<h5>Code:</h5>

<pre><code>class Solution {
public:
    void rotate(vector&lt;vector&lt;int&gt; &gt; &amp;matrix)
    {
        int row = matrix.size();
        int col = matrix[0].size();
        // 
        for(int i=0;i&lt;row;i++)
        for(int j=0;j&lt;i;j++)
            swap(matrix[i][j],matrix[j][i]);
        //
        for(int i=0;i&lt;row;i++)
        for(int j=0;j&lt;col/2;j++)
            swap(matrix[i][j],matrix[i][col-1-j]);

    }
};
</code></pre>

<h5>说明</h5>

<ul>
<li><p>1.从windows下粘贴来的代码后面会有<sup>M</sup>的结尾，原因是换行符的约定问题，在vim中很容易删除，用:%s/^M//g即可，但此处的<sup>M</sup>需要用Ctrl+V再加上M得到</p></li>
<li><p>2.这题方法不是很多，先正对角线换，再左右换；或者逆对角线，再左右</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unique Binary Search Trees Ii]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/unique-binary-search-trees-ii/"/>
    <updated>2014-07-18T16:14:31+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/unique-binary-search-trees-ii</id>
    <content type="html"><![CDATA[<h4><a href="https://oj.leetcode.com/problems/unique-binary-search-trees-ii/">Unique Binary Search Tree II</a></h4>

<!--more-->


<h5>Problem</h5>

<p>Given n, generate all structurally unique BST&rsquo;s (binary search trees) that store values 1&hellip;n.</p>

<h5>Code</h5>

<pre><code>/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector&lt;TreeNode *&gt; generate(int beg, int end)
    {
        vector&lt;TreeNode* &gt; ret;
        if (beg &gt; end)
        {
            ret.push_back(NULL);
            return ret;
        }

        for(int i = beg; i &lt;= end; i++)
        {
            vector&lt;TreeNode* &gt; leftTree = generate(beg, i - 1);
            vector&lt;TreeNode* &gt; rightTree = generate(i + 1, end);
            for(int j = 0; j &lt; leftTree.size(); j++)
                for(int k = 0; k &lt; rightTree.size(); k++)
                {
                    TreeNode *node = new TreeNode(i + 1);
                    ret.push_back(node);
                    node-&gt;left = leftTree[j];
                    node-&gt;right = rightTree[k];              
                }           
        }

        return ret;
    }

    vector&lt;TreeNode *&gt; generateTrees(int n) {
        return generate(0, n - 1);
    }
};
</code></pre>

<h5>注意</h5>

<ul>
<li>1.此题第一想法就应试是递归或DFS</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Insert Interval]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/insert-interval/"/>
    <updated>2014-07-18T15:40:02+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/insert-interval</id>
    <content type="html"><![CDATA[<h4>leetcode-Insert interval</h4>

<h5>题干</h5>

<p>Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).</p>

<p>You may assume that the intervals were initially sorted according to their start times.</p>

<p>Example 1:
Given intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].</p>

<p>Example 2:
Given [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as [1,2],[3,10],[12,16].</p>

<p>This is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10].</p>

<!--more-->


<p>这题被虐了十几次，耗时半日．</p>

<p>其实逻辑简单，只是处理起来麻烦，如果有调试会更简单，只是平台上面只有结果．</p>

<h5>code</h5>

<pre><code>/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
bool  cmp(Interval interval1, Interval interval2)
{
        return interval1.start&lt;interval2.start;
}
class Solution {
public:

    vector&lt;Interval&gt; insert(vector&lt;Interval&gt; &amp;intervals, Interval newInterval) 
    {
         int size = intervals.size();
         intervals.push_back(newInterval);
         if(size==0)
            return intervals;  // pitfall1
        sort(intervals.begin(), intervals.end(), cmp);
        vector&lt;Interval&gt; result;
        int starts, ends;
        size++;
        int i,j;
        for(i=0;i&lt;size;i++)
        {
            starts = intervals[i].start;
            ends   = intervals[i].end;
            for(j=i+1;j&lt;size;j++)
            {
                if(ends&lt;intervals[j].start)
                  {
                    Interval tmp(starts, ends);
                    result.push_back(tmp);
                     break;
                  }
                 else if(ends&gt;=intervals[j].start&amp;&amp;ends&lt;=intervals[j].end)
                 {
                     ends = intervals[j].end;
                     i = j; //pitfall2
                 }
                 else
                    i = j; //pitfall3
            }
            if(size==j)
             {
                    Interval tmp(starts, ends);
                    result.push_back(tmp);
                    break;
             }
        }
        return result;
    }
};
</code></pre>

<p>三个pitfalls，首先按starts排序，然后遍历，其中要更新的不止是ends的值，还有是i也要更新，这样，就略过了．</p>

<h5>Bug</h5>

<ul>
<li><ol>
<li>关于sort排序，应该放在class之外，否则会报错</li>
</ol>
</li>
<li><ol>
<li>vector也有sort函数</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C++中sort报错]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/18/c-plus-plus-zhong-sortbao-cuo/"/>
    <updated>2014-07-18T12:25:35+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/18/c-plus-plus-zhong-sortbao-cuo</id>
    <content type="html"><![CDATA[<h4>C++中报错</h4>

<p><strong> no matching function for call to &lsquo;sort&rsquo;</strong></p>

<!--more-->


<p>具体：</p>

<p>代码如下：</p>

<pre><code>class Solution {
public:
bool  cmp(Interval interval1, Interval interval2)
{
        return interval1.start&lt;interval2.start;
};
int f()
{
    ...
    sort(intervals.begin(),intervals.end(),cmp);
    ...
}
};
</code></pre>

<p>此处用法错误，不知是否察觉：</p>

<p><strong> no matching function for call to &lsquo;sort&rsquo;</strong></p>

<p>解决之法：</p>

<p>将cmp的定义置于class之外</p>

<p>可以将sort定义在结构体之内，这样就直接intervals.sort(&hellip;)；如果定义在之外，要放在类的外面</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[添加用户]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/17/tian-jia-yong-hu/"/>
    <updated>2014-07-17T01:28:54+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/17/tian-jia-yong-hu</id>
    <content type="html"><![CDATA[<h4>Linux下添加用户　</h4>

<p>所涉及到的知识和概念比较多</p>

<!--more-->


<h5>命令</h5>

<p><strong>useradd</strong></p>

<pre><code>useradd [] name
-b, --base-dir BASE_DIR 新账户的主目录的基目录
-c, --comment COMMENT         新账户的 GECOS 字段
-d, --home-dir HOME_DIR       新账户的主目录
-D, --defaults      显示或更改默认的 useradd 配置
-e, --expiredate EXPIRE_DATE  新账户的过期日期
-f, --inactive INACTIVE       新账户的密码不活动期
-g, --gid GROUP     新账户主组的名称或 ID
-G, --groups GROUPS 新账户的附加组列表
-h, --help                    显示此帮助信息并推出
-k, --skel SKEL_DIR 使用此目录作为骨架目录
-K, --key KEY=VALUE           不使用 /etc/login.defs 中的默认值
-l, --no-log-init   不要将此用户添加到最近登录和登录失败数据库
-m, --create-home   创建用户的主目录
-M, --no-create-home        不创建用户的主目录
-N, --no-user-group 不创建同名的组
-o, --non-unique        允许使用重复的 UID 创建用户
-p, --password PASSWORD     加密后的新账户密码
-r, --system                  创建一个系统账户
-R, --root CHROOT_DIR         chroot 到的目录
-s, --shell SHELL       新账户的登录 shell
-u, --uid UID           新账户的用户 ID
-U, --user-group        创建与用户同名的组
-Z, --selinux-user SEUSER       为 SELinux 用户映射使用指定 SEU
sudo useradd -d /home/hadoop/ -g adm -s /bin/bash hadoop
</code></pre>

<ul>
<li><ol>
<li>如果<code>-s /bin/sh</code>就会出现登录后只有一个$的情形，这是所选的shell出不对，应该换成/bin/bash</li>
</ol>
</li>
<li><ol>
<li>所选的目录应该事先就创建一个 <code>-d</code></li>
</ol>
</li>
<li><ol>
<li>-g 组名，可以查看<code>/etc/group</code>文件中的组名</li>
</ol>
</li>
</ul>


<p><strong>userdel</strong></p>

<pre><code>sudo userdel hadoop
</code></pre>

<p><strong>who,whoami,w,finger</strong>
这此命令查看相关用户情况，是个很常用的命令，用法也很简单</p>

<h5>概念</h5>

<p><strong>组的分类</strong>
&ndash; 1. 管理员 root:具有使用系统所有权限的用户,其UID 为0.
&ndash; 2. 普通用户: 即一般用户,其使用系统的权限受限,其UID为500-60000之间.
&ndash; 3. 系统用户 :保障系统运行的用户,一般不提供密码登录系统,其UID为1-499之间.</p>

<p><strong>文件</strong>
&ndash; 1．/etc/passwd文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>其格式：account：password：UID:GID:GECOS:diretory:shell
</span><span class='line'>        account: 用户名或帐号
</span><span class='line'>        password ：用户密码占位符
</span><span class='line'>        UID：用户的ID号
</span><span class='line'>        GID：用户所在组的ID号
</span><span class='line'>        GECOS:用户的详细信息（如姓名，年龄，电话等）
</span><span class='line'>        diretory：用户所的家目录
</span><span class='line'>        shell：用户所在的编程环境</span></code></pre></td></tr></table></div></figure>


<p>            <br/>
&ndash; 2. /etc/shadow</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   其格式：account：password：最近更改密码的日期：密码不可更该的天数：密码需要重新更改的天数：密码更改前的警告期限：密码过期的宽限时间：帐号失效日期：保留</span></code></pre></td></tr></table></div></figure>


<p><strong>相关命令</strong>
usermod, groupdd</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[记一次网络问题]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/17/ji-%5B%3F%5D-ci-wang-luo-wen-ti/"/>
    <updated>2014-07-17T00:12:42+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/17/ji-[?]-ci-wang-luo-wen-ti</id>
    <content type="html"><![CDATA[<h4>记一次网络问题及处理</h4>

<h5>问题描述</h5>

<p>周五的时候，网络还很好的，不论是外网还是内网，速度都正常．到周一的时候，速度特别慢，外网更慢．</p>

<p>速度慢，有的网站很快就刷出来，比如百度，so.com特，外网就很慢．qq聊天一切正常．内网中，局域网没问题，可以ping通网关和内网主机，并且ttl时间也很正常，没有延迟的现象</p>

<p>所有网站都可以访问，只是表现为速度慢，要加载很长时间</p>

<!--more-->


<h5>猜测原因</h5>

<p>由于近来，外网好多网站被封，所以外网访问慢的现象暂时没有考虑在内，倒是其它中平时常用的网站确实不能容忍．</p>

<p>咨询过网管，他们也在查找原因．可以确定，他们没改任何配置和参数，近来也没有增添任何新设备过改动</p>

<p>猜测原因：
&ndash; 1.外网的问题．这个排除，因为其它本地方，没有网络问题的报告
&ndash; 2.内部有主机干扰主干路由器，中病毒或者其它．这个可能性也不大，如果是干扰路由器，那样网管会很快查找出原因．也不可能会访问得到网络
&ndash; 3.路由器可能运行异常．网管尝试过重启路由器，但问题仍在
&ndash; 4.线路断了．</p>

<hr />

<h5>问题解决</h5>

<p>其实这个问题应该很明显了，就是第四个原因．但当时很傻的认为，既然可以访问网络，只是速度慢了，所以线路，比如网线／电缆／光纤什么的，一定是通畅无误的，否则不是慢的问题，而是能不能上网的问题．但岂知，问题就出现在此</p>

<p>最后问题确定出现在核心交换机的六对光纤中的一对出了问题造成的，通过问题光纤的数据包会丢失，导致出现选择性的丢包现象.当时为什么没想到，是线路部分断了，这样就会丢包，于是会不停的确认和连接，这样又出现在主干网路中，当大家访问多了，这种现象就更严重了．</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git常用命令]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/16/git/"/>
    <updated>2014-07-16T19:27:13+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/16/git</id>
    <content type="html"><![CDATA[<h4>Git常用命令</h4>

<p>Git命令很多，大多都可直接用git查询，有些用不上．常用的也就那几条，记录之．</p>

<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff/git diff --cached/git diff HEAD
</span><span class='line'>git add -u 将本地改动的文件add
</span><span class='line'>git add -A
</span><span class='line'>git mv file1 file2
</span><span class='line'>git add .
</span><span class='line'>git commit -m'a'
</span><span class='line'>git push origin source
</span><span class='line'>git reset --hard HEAD^/HEAD^^/HEAD~100
</span><span class='line'>git reset -hard ****
</span><span class='line'>git log / git log --pretty=oneline
</span><span class='line'>git reflog 
</span><span class='line'>git status
</span><span class='line'>
</span><span class='line'>working directory工作区---&gt;版本库repository{stage/index暂存区, master};
</span><span class='line'>
</span><span class='line'>git checkout --　file 丢弃工作区的修改，回到和暂存区一致
</span><span class='line'>git reset　HEAD filename撤销暂存区中的修改，表示filename是最新的版本
</span><span class='line'>误删rm文件后，可以git checkout -- file
</span><span class='line'>git rm file从版本库中删除，再git commit -m''或者rm file后再git rm file 再git commit -m''
</span><span class='line'>
</span><span class='line'>本地仓库添加远程库git remote add origin url 远程库名叫origin
</span><span class='line'>git push -u origin master(第一次推送)
</span><span class='line'>git push orighin master
</span><span class='line'>
</span><span class='line'>主分支master，提倡用分支来完成工作，再合并后删除
</span><span class='line'>创建分支git checkout -b dev(b表示创建并切换)相当于git branch dev 和git checkout dev
</span><span class='line'>git branch查看当前分支
</span><span class='line'>git checkout master切回分支
</span><span class='line'>git merge dev合并分支到master上
</span><span class='line'>git branch -d dev 删除分支
</span><span class='line'>
</span><span class='line'>git merge --no-ff -m"" dev合并分支时禁用fast forward方式，这样分支的commit信息还会存在
</span><span class='line'>
</span><span class='line'>git stash把当前工作现场储存起来
</span><span class='line'>git stash list查看工作现场
</span><span class='line'>git stash apply恢复，但stash内容不删除，需要git stash drop删除
</span><span class='line'>git stash pop恢复并删除stash
</span><span class='line'>git remote　－v 查看远程信息
</span><span class='line'>git branch -D branchname强行删除分支
</span><span class='line'>git push origin master推送分支master到远程
</span><span class='line'>git pull把远程的提交抓下来，然后本地合并，解决冲突后再推送上去
</span><span class='line'>一般分支master, dev, bug, featurejjj
</span><span class='line'>git checkout -b dev origin/dev本地创建dev分支
</span><span class='line'>git tag v1.0打标签
</span><span class='line'>git tag查看tags
</span><span class='line'>git tag name commitid -m'a'
</span><span class='line'>git tag -d name 删除
</span><span class='line'>git push origin name 推送某个
</span><span class='line'>git psuh origin --tags推送所有
</span><span class='line'>
</span><span class='line'>github上的pull　request申请后才可以pull上去
</span><span class='line'>fork也可以pull
</span><span class='line'>创建.gitignore文件，把要忽略的文件名放进去git会忽略
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exponentiation]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/16/exponentiation/"/>
    <updated>2014-07-16T10:49:34+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/16/exponentiation</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编程之美|数字之迷]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/16/bian-cheng-zhi-mei-%7Cshu-zi-zhi-mi/"/>
    <updated>2014-07-16T10:30:05+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/16/bian-cheng-zhi-mei-|shu-zi-zhi-mi</id>
    <content type="html"><![CDATA[<h4>编程之美之数学之迷</h4>

<p>此书趣味多多．前者类似题充斥网络，始作者即此书也．可见其影响之广，流传之远．细看年月，已数年之久，可谓经典．求职者奉为圭臬，学生党视若珍宝，今一睹真容．</p>

<!--more-->


<p><strong>目录：</strong>
&ndash;  <a href="#1">2.1 二进制中1的个数</a>
&ndash;  <a href="#2">2.2 阶乘</a>
&ndash;  <a href="#3">2.3 发帖水王</a>
&ndash;  <a href="#4">2.4 1的数目</a>
&ndash;  <a href="#5">2.5 最大的k个数目</a>
&ndash;  <a href="#6">2.6 精确表达浮点数</a>
&ndash;  <a href="#7">2.7 最大公约数</a>
&ndash;  <a href="#8">2.8 符合条件的整数</a></p>

<h5 id="1">2.1二进制中1的个数</h5>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google_c++编程规范图]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/15/google-c-plus-plus-bian-cheng-gui-fan-tu/"/>
    <updated>2014-07-15T02:30:11+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/15/google-c-plus-plus-bian-cheng-gui-fan-tu</id>
    <content type="html"><![CDATA[<h5>Google C++ Style Guide</h5>

<p>觅得神图一张，尽解Google C++ Style Guide</p>

<p>制作精美，详尽得当，不可多得</p>

<p>感谢原作者<a href="http://blog.csdn.net/voidccc/article/details/37599203">voidccc</a></p>

<!--more-->


<p><strong>原图（可另存）</strong></p>

<p><img src="http://mkdir1.github.io/images/google_c++.png"></p>

<h5>总结一下</h5>

<ul>
<li><ol>
<li>文件名小写，可有下划线或短线，扩展为.cc</li>
</ol>
</li>
<li><ol>
<li>开关加版权，许可证，作者，说明．．</li>
</ol>
</li>
<li><ol>
<li>.h文件顺序：本类的.h，C系统文件，C++系统文件，其它库，本项目头文件，避免用../.开关，要绝对路径指示.h</li>
</ol>
</li>
<li><ol>
<li>禁止使用using namespace xx,而用using std::string</li>
</ol>
</li>
</ul>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome快捷键]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/15/chromekuai-jie-jian/"/>
    <updated>2014-07-15T00:39:34+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/15/chromekuai-jie-jian</id>
    <content type="html"><![CDATA[<h4>chrome下的快捷键&amp;Vimium</h4>

<p>chrome算是自己常用的浏览器之一吧，一直是键盘党，就算是chrome仍用vimium这种vim插件．对于程序员来说，用鼠标是可耻的，不到万不得已，也不能用．</p>

<p>所以烂熟快捷键可谓高手之于心法，工欲善其事，必先利其器，信然～</p>

<!--more-->


<h5>快捷键大全</h5>

<p>下者所列乃大部常用操作，</p>

<p><strong>常用特注之</strong></p>

<p><strong>Chrome窗口和标签页快捷键</strong></p>

<ul>
<li><strong>Ctrl+N</strong> 打开新窗口</li>
<li><strong>Ctrl+T</strong> 打开新标签页</li>
<li>Ctrl+Shift+N 在隐身模式下打开新窗口</li>
<li>Ctrl+O，选择文件 在谷歌浏览器中打开计算机上的文件</li>
<li>按住 Ctrl 键，然后点击链接 从后台在新标签页中打开链接，但您仍停留在当前标签页中</li>
<li>按住 Ctrl+Shift 键，然后点击链接 在新标签页中打开链接，同时切换到新打开的标签页</li>
<li>按住 Shift 键，然后点击链接 在新窗口中打开链接</li>
<li><strong>Alt+F4</strong> 关闭当前窗口</li>
<li><strong>Ctrl+Shift+T</strong> 重新打开上次关闭的标签页。谷歌浏览器可记住最近关闭的 10 个标签页。</li>
<li>将链接拖动到标签页内 在指定标签页中打开链接</li>
<li>将链接拖动到两个标签页之间 在标签页横条的指定位置建立一个新标签页，在该标签页中打开链接</li>
<li>Ctrl+1 到 Ctrl+8 切换到指定位置编号的标签页。您按下的数字代表标签页横条上的相应标签位置。</li>
<li>Ctrl+9 切换到最后一个标签页</li>
<li><strong>Ctrl+Tab 或 Ctrl+PgDown</strong> 切换到下一个标签页,这里和vimium中的H功能一样，不过都要记住</li>
<li><strong>Ctrl+Shift+Tab 或 Ctrl+PgUp</strong> 切换到上一个标签页，vimium下的L</li>
<li><strong>Ctrl+W 或 Ctrl+F4</strong> 关闭当前标签页或弹出式窗口</li>
<li><strong>Alt+Home</strong> 打开主页</li>
</ul>


<p><strong>Chrome地址栏快捷键</strong></p>

<ul>
<li>键入搜索字词 使用默认搜索引擎进行搜索</li>
<li>键入网址中”www.”和”.com”之间的部分，然后按Ctrl+Enter 键 为您在地址栏中输入的内容添加”www.”和”.com”，然后打开网址</li>
<li>键入搜索引擎关键字或网址，按 Tab键，然后键入搜索字词 使用与关键字或网址相关联的搜索引擎进行搜索。如果谷歌浏览器可以识别您要使用的搜索引擎，则会提示您按 Tab 键。</li>
<li>F6 或 Ctrl+L 或 Alt+D 选中网址区域中的内容</li>
<li>键入网址，然后按 Alt+Enter 键 在新标签页中打开网址</li>
<li>打开谷歌chrome浏览器各功能的快捷键</li>
<li><strong>Ctrl+B</strong> 打开和关闭书签栏</li>
<li><strong>Ctrl+Shift+B</strong> 打开书签管理器</li>
<li><strong>Ctrl+H</strong> 查看”历史记录”页</li>
<li><strong>Ctrl+J</strong> 查看”下载”页</li>
<li>Shift+Escape 查看任务管理器</li>
<li>Shift+Alt+T 将焦点设置在工具栏上。使用键盘上的向右和向左箭头，可导航至工具栏上的不同按钮。</li>
</ul>


<p><strong>Chrome网页快捷键</strong></p>

<ul>
<li>Ctrl+P 打印当前页</li>
<li>Ctrl+S 保存当前页</li>
<li>F5 重新加载当前页</li>
<li>Esc 停止加载当前页</li>
<li>Ctrl+F 打开”在网页上查找”框</li>
<li>点击鼠标中键或滚轮（只在谷歌浏览器测试版（只有英文版）中可用） 激活自动滚动。当您移动鼠标时，网页会根据鼠标的移动方向自动滚动。</li>
<li>Ctrl+F5 或 Shift+F5 重新加载当前页，但忽略缓存内容</li>
<li>按住 Alt 键，然后点击链接 下载链接</li>
<li><strong>Ctrl+G 或 F3</strong> 查找与您在”在网页上查找”框中输入的内容相匹配的下一个匹配项</li>
<li>Ctrl+Shift+G 或 Shift+F3 查找与您在”在网页上查找”框中输入的内容相匹配的上一个匹配项</li>
<li><strong>Ctrl+U</strong> 查看源代码</li>
<li>将链接拖动到书签栏 将链接加入书签</li>
<li><strong>Ctrl+D</strong> 将当前网页加入书签</li>
<li>Ctrl++，或者按住 Ctrl 键并向上滚动鼠标滚轮 放大网页上的所有内容</li>
<li>Ctrl+-，或者按住 Ctrl 键并向下滚动鼠标滚轮 缩小网页上的所有内容</li>
<li>Ctrl+0 将网页上的所有内容都恢复到正常大小</li>
<li>选中内容，然后按 Ctrl+C 键 将内容复制到剪贴板</li>
<li>将光标置于文本字段中，然后按 Ctrl+V 或 Shift+Insert 键 从剪贴板粘贴当前内容</li>
<li>将光标置于文本字段中，然后按 <strong>Ctrl+Shift+V</strong> 键 从剪贴板粘贴当前内容的纯文本部分</li>
<li>选中文字字段中的内容，然后按 Ctrl+X 或Shift+Delete 键 删除内容并将其复制到剪贴板</li>
</ul>


<hr />

<h4>Vimium下的快捷键</h4>

<p>与chrome算是绝配，有如虎添翼之感．Geek神器，大神必备</p>

<ul>
<li>j: 向下移动。</li>
<li>k：向上移动。（不明白默认的表示是啥用法，使用了c-y这三个键没有效果）</li>
<li>h：向左移动。</li>
<li>l：向右移动。</li>
<li>zH：一直移动到左部。</li>
<li>zL:一直移动到右部。</li>
<li>gg：跳转到页面的顶部。</li>
<li>G：跳转到页面的底部。</li>
<li><strong>d：向下翻页</strong>（相当于PageDown被按下了）</li>
<li><strong>u：向上翻页</strong>（相当于PageUp被按下了）</li>
<li>r：重新载入该页（相当于F5刷新页面）</li>
<li><strong>gs：查看页面源代码</strong> 等于chrome下的Ctrl+U</li>
<li><strong>yy：拷贝当前页面的URL到剪贴板</strong>当前页面</li>
<li>yf：拷贝某一个URL到剪贴板（实际上是相当于输入了f，然后出现很多编码的URL，选择某个之后，相当于拷贝了某个，因为一个页面中可能有很多超链接）</li>
<li><strong>gu：跳转到父页面</strong>（比如<a href="http://www.douban.com/group/vim/%EF%BC%8C%E8%BE%93%E5%85%A5%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%88%B0%E7%88%B6%E9%A1%B5%E9%9D%A2%E5%8D%B3http://www.douban.com/group/%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B8%8D%E5%90%8C%E4%BA%8EH%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%98%AF%E5%9B%9E%E5%88%B0%E4%B8%8A%E4%B8%AA%E5%8E%86%E5%8F%B2%E9%A1%B5%E9%9D%A2%EF%BC%89">http://www.douban.com/group/vim/%EF%BC%8C%E8%BE%93%E5%85%A5%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%88%B0%E7%88%B6%E9%A1%B5%E9%9D%A2%E5%8D%B3http://www.douban.com/group/%EF%BC%8C%E6%89%80%E4%BB%A5%E4%B8%8D%E5%90%8C%E4%BA%8EH%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%98%AF%E5%9B%9E%E5%88%B0%E4%B8%8A%E4%B8%AA%E5%8E%86%E5%8F%B2%E9%A1%B5%E9%9D%A2%EF%BC%89</a></li>
<li>i：输入模式（如果发现命令不起作用，可能是进入输入模式了，此时按Esc回到命令模式）</li>
<li><strong>gi：将焦点集中到第一个输入框</strong>（输入gNi则焦点集中到第N个输入框）</li>
<li>f：在当前的页面打开一个新的链接。</li>
<li>F：在新的页面打开一个新的链接。</li>
<li>:在当前页面打开多个链接（没感觉使用到了多个标签，不过表示的是输入af）</li>
<li><strong>b：在当前页打开一个书签</strong>。（输入部分网址会自动进行搜索）</li>
<li><strong>B：在新的标签页打开一个书签</strong></li>
<li>gf：循环到当前页面的下一个框层（可能跟页面制作有关，目前没用到）</li>
<li>/ : 查找</li>
<li>n: 向下查找匹配内容</li>
<li>N：向上查找匹配内容</li>
<li><strong>H：回退上一个历史页面（相当于浏览器中的向左箭头）Ctrl+Tab或者Ctrl+PageDown</strong></li>
<li><strong>L：回到下一个历史页面（相当于浏览器的向右箭头）</strong></li>
<li><strong>K，gt：跳转到右边的一个标签页</strong></li>
<li><strong>J，gT：跳转到左边的一个标签页</strong> 和chrome下的Ctrl+9一样．</li>
<li>t：创建一个新的标签页</li>
<li><strong>x：关闭当前的标签页</strong> = Ctrl+W</li>
<li><strong>X：恢复刚刚关闭的标签页</strong> = Ctrl+Shift+T</li>
<li><strong>？：显示命令的帮助提示（再按一次关闭）</strong></li>
</ul>


<hr />

<p>还有一些通用的快捷键：</p>

<ul>
<li>空格</li>
<li>PageUp, PageDown, Array</li>
<li>Home, End, Insert</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ssh无密码登录]]></title>
    <link href="http://mkdir1.github.io/blog/2014/07/15/sshwu-mi-ma-deng-lu/"/>
    <updated>2014-07-15T00:30:04+08:00</updated>
    <id>http://mkdir1.github.io/blog/2014/07/15/sshwu-mi-ma-deng-lu</id>
    <content type="html"><![CDATA[<h4>ssh无密码登录</h4>

<!--more-->


<p>ssh应用太广，最常用的就是远程登录和文件传输了，每次输入密码和登录确实很浪费时间，这里就不需要输入密码了</p>

<h5>设置</h5>

<ul>
<li><ol>
<li>在客户端．生成密钥<code>ssh-keygen -t rsa</code>，这样在~/.ssh文件夹中就会有一个公钥和一个私钥</li>
</ol>
</li>
<li><ol>
<li>服务端，在~/.ssh中，将客户端的id_rsa.phb放到这里，<code>scp .ssh/id_rsa.phb ip:.ssh/authorizend_keys</code>，也可以命名其它的</li>
</ol>
</li>
<li><ol>
<li>再登录时就可以不用输入密码．也可以把登录alias写入bash中，scp时也不用输入密码，但是还是要记住ip</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
